Index: gst-omx1/omx/gstomxvideoenc.c
===================================================================
--- gst-omx1.orig/omx/gstomxvideoenc.c
+++ gst-omx1/omx/gstomxvideoenc.c
@@ -33,8 +33,6 @@
 #include "gstomxvideoenc.h"
 #include "gstnvivameta_api.h"
 
-#include "gstomxtrace.h"
-
 GST_DEBUG_CATEGORY_STATIC (gst_omx_video_enc_debug_category);
 #define GST_CAT_DEFAULT gst_omx_video_enc_debug_category
 
@@ -626,16 +624,6 @@ gst_omx_video_enc_open (GstVideoEncoder
       }
     }
   }
-  if (self->measure_latency)
-  {
-    if(gst_omx_trace_file_open(&self->tracing_file_enc) == 0)
-    {
-      g_print("%s: open trace file successfully\n", __func__);
-      self->got_frame_pt = g_queue_new();
-    }
-    else
-      g_print("%s: failed to open trace file\n", __func__);
-  }
   return TRUE;
 }
 
@@ -669,11 +657,6 @@ gst_omx_video_enc_close (GstVideoEncoder
 
   GST_DEBUG_OBJECT (self, "Closing encoder");
 
-  if (self->tracing_file_enc) {
-      gst_omx_trace_file_close(self->tracing_file_enc);
-      g_queue_free(self->got_frame_pt);
-  }
-
   if (!gst_omx_video_enc_shutdown (self))
     return FALSE;
 
@@ -1099,20 +1082,6 @@ gst_omx_video_enc_handle_output_frame (G
 
       frame->output_buffer = outbuf;
 
-      if (self->tracing_file_enc)
-      {
-        gettimeofday(&ts, NULL);
-        done_time = ((long long int)ts.tv_sec*1000000 + ts.tv_usec)/1000;
-
-        guint64 *in_time_pt = g_queue_pop_tail(self->got_frame_pt);
-        gst_omx_trace_printf(self->tracing_file_enc,
-          "KPI: omx: frameNumber= %lld encoder= %lld ms pts= %lld\n",
-          self->framecount, done_time - *in_time_pt, frame->pts);
-
-        g_free(in_time_pt);
-        self->framecount ++;
-      }
-
       flow_ret =
           gst_video_encoder_finish_frame (GST_VIDEO_ENCODER (self), frame);
     } else {
